{"version":3,"sources":["images/kelvin.jpg","components/Navbar.js","components/Home.js","components/WorkTile.js","components/Work.js","components/PageContainer.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","Link","to","Home","src","require","style","paddingBottom","opacity","href","target","WorkTile","props","techStack","tech","split","superTitle","title","map","elem","key","toUpperCase","concat","path","Work","components_WorkTile","PageContainer","components_Navbar","children","App","BrowserRouter","components_PageContainer","Route","exact","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2f387af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kelvin.6e4c7d27.jpg\";","import React, { Component } from 'react';\nimport '../styles/navbar.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nconst Navbar = () => (\n    <div className=\"navbar\">\n      <Link to=\"/\">// Home</Link>\n      <Link to=\"/about\">// About</Link>\n      <Link to=\"/work\">// Work</Link>\n      <Link to=\"/experience\">// Experience</Link>\n    </div>\n);\n\nexport default Navbar;","import React from 'react';\nimport Navbar from './Navbar';\nimport '../styles/home.css';\n\nconst Home = () => (\n  <div className=\"mainContent\">\n    <img className=\"mainPic\" src={require('../images/kelvin.jpg')}/>\n    <div style={{paddingBottom: '20px'}}><p>1</p><div><span className=\"name\">_Kelvin Masilamani</span> {'{'}</div></div>\n      <div style={{paddingBottom: '20px'}} className=\"indent\"><p>2</p><div>developer.FrontEnd ;</div></div>\n      <div style={{paddingBottom: '20px'}} className=\"indent line3\">\n      <p>3</p>\n      <div style={{opacity: '0.5'}}>\n      {'/*  '}\n      <a href=\"mailto:kmasila00@gmail.com?Subject=Hello%20Kelvin\" target=\"_top\">email</a>\n      <a target=\"_blank\" href=\"https://drive.google.com/file/d/1akQ3a0t696R5dUUmknHNyGXmWyoqQQsy/view?usp=sharing\">resume</a>\n      <a target=\"_blank\" href=\"https://github.com/kmasila00\">github</a>\n      <a target=\"_blank\" href=\"https://www.linkedin.com/in/kelvin-masilamani\">linkedin</a>\n    {'  */'}\n      </div>\n      </div>\n      <div><p>4</p><div>{'}'}</div></div>\n  </div>\n);\n\nexport default Home;","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport '../styles/workTile.css'\n\nconst WorkTile = (props) => {\n  let techStack = props.tech.split(' ');\n  return (\n    <div className=\"workTile\">\n      <div className=\"leftContent\">\n        <div className=\"superTitle\">{props.superTitle}</div>\n        <div className=\"title\">{props.title}</div>\n        <div className=\"built\">BUILT WITH</div>\n        <div className=\"techSection\">\n          {techStack.map((elem, key) => (\n            <div key={key} className=\"tech\">{elem.toUpperCase()}</div>\n          ))}\n        </div>\n      </div>\n      <div className=\"rightContent\">\n        <div className=\"button\"><Link to={`/work${props.path}`}>See Project</Link></div>\n        <div className=\"box\"/>\n      </div>\n    </div>\n  )\n};\n\nexport default WorkTile;","import React from 'react';\nimport WorkTile from './WorkTile';\nimport '../styles/work.css';\n\nconst Work = () => (\n  <div className=\"workPage\">\n    <div className=\"header\">_Work {'{'}</div>\n      <WorkTile\n        superTitle=\"OvationTix\"\n        title=\"Consumer Interface\"\n        tech=\"React Redux HTML CSS\"\n        path=\"/ci\" />\n      <WorkTile\n        superTitle=\"OvationTix\"\n        title=\"Reporting Dashboard\"\n        tech=\"React Redux HTML CSS\"\n        path=\"/rpt\" />\n      <WorkTile\n        superTitle=\"OvationTix\"\n        title=\"Admin Interface\"\n        tech=\"Jquery HTML CSS\"\n        path=\"/adm\" />\n    <div className=\"footer\">{'}'}</div>\n  </div>\n);\n\nexport default Work;","import React from 'react';\nimport Navbar from './Navbar';\n\nconst PageContainer = (props) => (\n  <div className=\"pageContainer\">\n    <Navbar/>\n    {props.children}\n  </div>\n);\n\nexport default PageContainer;","import React, { Component } from 'react';\nimport Home from './Home';\nimport Work from './Work';\nimport PageContainer from './PageContainer';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport '../styles/App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"leftBorder\"/>\n          <PageContainer>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/work\" component={Work} />\n          </PageContainer>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}